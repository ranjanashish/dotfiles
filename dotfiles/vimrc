" GLOBAL SETTING
""""""""""""""""
" general
set nocompatible                                        " MUST BE FIRST LINE!!! Vi IMproved
set autoindent                                          " take indent for new line from previous line
if has('mac') || has('win64') || has('win32')
    set clipboard=unnamed
else
    set clipboard=unnamedplus
endif
set cursorline                                          " highlight current line
set encoding=utf-8                                      " use UTF-8
set lazyredraw                                          " don't redraw while executing macros
set listchars=eol:$,tab:>-,trail:~,extends:>,precedes:< " characters for displaying in list mode
set nobackup                                            " 
set noswapfile                                          " whether to use a swapfile for a buffer
set nowrap                                              " 
set number                                              " print the line number in front of each line
set pastetoggle=<F10>                                   " key code that causes 'paste' to toggle
set scrolloff=3                                         " minimum number of lines above and below cursor
set showcmd                                             " display incomplete commands
set synmaxcol=400                                       " maximum column to find syntax items
set t_Co=256
set visualbell                                          " error bells are displayed visually
set wildmenu                                            " show autocomplete menus
set wildignore=*.o,*~,*.pyc                             " files matching these patterns are not completed
set tags=./tags;$HOME                                   " look in the current directory for 'tags', and work up the tree towards $HOME until one is found
" search
set hlsearch                                            " highlight search
set ignorecase                                          " ignore case when searching
set incsearch                                           " search as you type
" tab
set tabstop=4                                           " number of spaces that <tab> in file uses
set expandtab                                           " insert appropriate number of spaces instead of a tab
set shiftwidth=4                                        " number of spaces to use for (auto)indent step
set smarttab                                            " use 'shiftwidth' when inserting <tab>
" required by plugins
set grepprg=grep\ -nH\ $*                               " REQUIRED!!! by vim-latexsuite
set laststatus=2                                        

" SYNTAX
""""""""
syntax on " enable syntax highlighting.

" GVIM
""""""
if has('gui_running')
    set guioptions-=m  " no menubar
    set guioptions-=T  " no toolbar
    set guioptions-=r  " no right-hand scrollbar
    set guioptions-=L  " no left-hand scrollbar
    if has('gui_gtk3') || has('gui_gtk2')
        set guifont=JetBrains\ Mono\ Regular\ 13
    elseif has('gui_macvim')
        set guifont=JetBrains\ Mono\ Regular:h13
    elseif has('gui_win32')
        set guifont=Consolas:h10:cANSI
    endif
endif

" COLORSCHEME
"""""""""""""
colorscheme molokai

" ALL VARIABLE
""""""""""""""
let mapleader = "\<Space>"

" GLOBAL VARIABLE
"""""""""""""""""
" airline
let g:airline_powerline_fonts  = 1
" airline - extensions
let g:airline#extensions#tagbar#enabled = 0

" floaterm
let g:floaterm_autoclose = 2
let g:floaterm_keymap_toggle = '<F12>'

" nerdtree
let NERDTreeIgnore = ['^__pycache__$', '^bower_components$', '^node_modules$', '^tags$', '\.o$', '\.out$', '\.pyc$']

" startify
let g:startify_list_order = [['   Sessions'], 'sessions', ['   Bookmarks'], 'bookmarks', ['   MRU'], 'files']

" ultisnips
let g:UltiSnipsExpandTrigger="<c-j>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"

" YouCompleteMe
let g:ycm_key_list_select_completion = ['<tab>, <Down>', '<Enter>']

" MAP
"""""
nnoremap Y y$
nnoremap n nzzzv
nnoremap N Nzzzv
nnoremap J mzJ`z
nnoremap j gj
nnoremap k gk

" resize splits
nnoremap <M-j> <C-w>-
nnoremap <M-k> <C-w>+
nnoremap <M-h> <C-w><
nnoremap <M-l> <C-w>>

nmap <silent> <leader>ev :e $HOME/.vimrc<CR>
nmap <silent> <leader>sv :so $HOME/.vimrc<CR>
nnoremap <leader>n       :NERDTreeToggle<CR>
noremap <silent><Leader>/ :nohls<CR>
